name: üè≠ factory chatbot CD

on:
  push:
    branches: [ main ]

env:
  SPRING_PROFILES_ACTIVE: prod

jobs:
  build-and-push:
    name: Build & Push Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '21'

      - name: Create application-prod.yml files
        run: |
          touch ./chat/src/main/resources/application-prod.yml
          touch ./mcp-client/src/main/resources/application-prod.yml

          echo "${{ secrets.CHAT_APPLICATION_PROD_YML }}" >> ./chat/src/main/resources/application-prod.yml
          echo "${{ secrets.MCP_CLIENT_APPLICATION_PROD_YML }}" >> ./mcp-client/src/main/resources/application-prod.yml

        shell: bash

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build -x test

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PAT }}

      - name: Build and push Docker image
        id: docker
        run: |
          DOCKER_IMAGE="${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO }}:latest"
          docker build -t ${DOCKER_IMAGE} --build-arg SPRING_PROFILES_ACTIVE=${{ env.SPRING_PROFILES_ACTIVE }} .
          docker push ${DOCKER_IMAGE}
          echo "docker_image=${DOCKER_IMAGE}" >> $GITHUB_OUTPUT

  deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest
    needs: build-and-push

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Extract Bedrock API Key from config
        id: extract_key
        run: |
          API_KEY=$(echo "${{ secrets.MCP_CLIENT_APPLICATION_PROD_YML }}" | grep "api-key:" | awk '{print $2}')
          echo "bedrock_api_key=${API_KEY}" >> $GITHUB_OUTPUT

      - name: Send deployment scripts to EC2
        uses: appleboy/scp-action@master
        with:
          username: ubuntu
          host: ${{ secrets.PROD_SERVER_IP }}
          key: ${{ secrets.PROD_PEM_KEY }}
          source: "./script/"
          target: "/home/ubuntu/app/"

      - name: Execute deployment
        uses: appleboy/ssh-action@master
        with:
          username: ubuntu
          host: ${{ secrets.PROD_SERVER_IP }}
          key: ${{ secrets.PROD_PEM_KEY }}
          script: |
            # Ïä§ÌÅ¨Î¶ΩÌä∏ Ïã§Ìñâ Í∂åÌïú ÏÑ§Ï†ï
            chmod +x ${HOME}/app/script/*.sh

            # ÌôòÍ≤Ω Î≥ÄÏàò ÏÑ§Ï†ï
            export DOCKER_IMAGE_URL="${{ secrets.DOCKER_HUB_USERNAME }}/${{ secrets.DOCKER_HUB_REPO }}:latest"
            export BEDROCK_API_KEY="${{ steps.extract_key.outputs.bedrock_api_key }}"

            # Î∞∞Ìè¨ Ïã§Ìñâ
            ${HOME}/app/script/deploy.sh

            echo ""
            echo "Deployment completed. Container status:"
            sudo docker ps